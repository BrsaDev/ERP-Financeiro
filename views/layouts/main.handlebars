<!DOCTYPE html>
<html lang="pt-br">

<head>
    {{!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.2/dist/js/bootstrap.bundle.min.js"></script> --}}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"
        integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB"
        crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
        integrity="sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/styles/main.css">
    <link rel="stylesheet" href="/styles/cadastro.css">
    <link rel="stylesheet" href="/styles/usuario.css">
    <link rel="stylesheet" href="/css/bootstrap.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no" />

    
    <title>Minhas finanças</title>
</head>

<body>
    <div class="modal fade" id="exampleModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false"
       aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Abrir Pagamento</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form method="post" action="/conta/abrir-conta">
                        <div>
                            <label class="col-form-label">Número Conta:</label>
                            <input type="number" class="form-control form-control-sm" id="numero-conta-abrir-conta">
                        </div>
                        <div class="mb-3">
                            <label class="col-form-label">Situação:</label>
                            <div class="col-sm-12 input-group input-group-sm">
                            <select class="form-select form-select-sm" id="situacao-abrir-conta" required>
                                <option value="Aberto">Aberto</option>
                                <option value="Pago">Pago</option>
                                <option value="Em andamento">Em andamento</option>
                                <option value="Cancelado">Cancelado</option>
                            </select>
                        </div>
                        </div>
                       
                    </form> 
                    <div class="modal-footer">
                        <button id="btn-close-popup-abrir-conta" type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                        <a id="btn-abrir-conta" type="button" class="btn btn-primary" target="_blank">Abrir</a>
                    </div>
                </div>
                
            </div>
        </div>
    </div>
    <!-- Modal  backup restaurar -->
    <div class="modal fade" id="modalBackup" tabindex="-1" aria-labelledby="modalBackupLabel" aria-hidden="true" data-bs-backdrop="static">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalBackupLabel">Restauração de Backup</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                você pode apenas restaurar um backup, ou criar um novo e restaurar o backup que selecionou!
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="backupRestore()">Criar Novo e Restaurar</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="onlyRestore()">Apenas Restaurar</button>
            </div>
            </div>
        </div>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 id="titulo-modal-info" class="modal-title p-1 w-100" id="staticBackdropLabel"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div id="body-modal-info" class="modal-body"></div>
                <div class="modal-footer">
                    <button id="btn-close-modal-info" type="button" class="btn btn-sm fw-bold" data-bs-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
     <!-- Button trigger modal -->
    <button id="btn-modal-info" type="button" class="btn btn-primary d-none" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
        Confirmar Compra
    </button>
    <div class="container-fluid">
        <div class="row">
            <div class="menu-mobile animation-fadein bg-white">
                <div class="circulo-open-menu bg-blue-pk cursor-pointer shadow-lg">
                  <i class="fs-5 bi-justify text-white" id="openCloseMenu"></i>  
                </div>
            </div>
            <br>
            {{> menuSidebar}}
            <div class="col py-3 ps-3 bg-gray body overflow-auto animation-fadein">
                {{{body}}}
            </div>
        </div>
    </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"
    integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3"
    crossorigin="anonymous"></script>
<script src="/js/bootstrap.bundle.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script src="/js/bootstrap.js"></script>
<script>
    var objConta = {}
    var idPopupFitro = ""
    var cursorPopupFiltro = 0
    setTimeout(function () {
        document.querySelector('#alert-temp').style.display = 'none'
    }, 10000)
    
    let btnModalInfo = document.querySelector("#btn-modal-info")
    let btnCloseModalInfo = document.querySelector("#btn-close-modal-info")
    let bodyModalInfo = document.querySelector("#body-modal-info")
    let tituloModalInfo = document.querySelector("#titulo-modal-info")

    document.querySelector("#openCloseMenu").addEventListener('click', function (e) {
        e.preventDefault()
        if (document.querySelector('.menu-mobile').style.display == "flex" || document.querySelector('.menu-mobile').style.display == "") {
            document.querySelector('.menu-mobile').style.display = "none"
            document.querySelector('.menu-sidebar').style.display = "flex"
        } else {
            document.querySelector('.menu-mobile').style.display = "flex"
            document.querySelector('.menu-sidebar').style.display = "none"
        }
    })

    document.querySelector(".close-menu").addEventListener('click', function (e) {
        document.querySelector('.menu-mobile').style.display = "flex"
        document.querySelector('.menu-sidebar').style.display = "none"
        document.querySelector('#container-submenu').classList.add("d-none")
    })

    function showHidePass() {
        if (document.getElementsByName("senha")[0].type == 'text') {
            document.getElementsByName("senha")[0].type = "password"
            document.querySelector("#eye-show-pass").classList.remove("d-none")
            document.querySelector("#eye-show-pass").classList.add("d-block")
            document.querySelector("#eye-hide-pass").classList.remove("d-block")
            document.querySelector("#eye-hide-pass").classList.add("d-none")
        } else {
            document.getElementsByName("senha")[0].type = "text"
            document.querySelector("#eye-show-pass").classList.add("d-none")
            document.querySelector("#eye-hide-pass").classList.remove("d-none")
            document.querySelector("#eye-hide-pass").classList.add("d-block")
        }
        return true
    }
    function closeAlert(id) {
        return document.querySelector("#alert-" + id).classList.add("d-none")
    }
    async function filtro(e, tipoDados, buscaPorCodigo, complemento, vinculo) {
        //cursorPopupFiltro = 1
        objConta = {}
        idPopupFitro = '#popupFiltro-' + e.name
        let width = window.getComputedStyle(e).width
        if (e.value == "" || (e.value.length < 1 && !buscaPorCodigo)) {
            return document.querySelector('#popupFiltro-' + e.name).classList.add("d-none")
        }
        document.querySelector('#popupFiltro-' + e.name).classList.add("d-none")
        let filtro = document.getElementsByName(e.name)[0].value
        let dados = document.querySelector('#' + tipoDados)

        let divs = dados.getElementsByTagName('div')
        let divFinal = "<div class='d-flex flex-column'>"
        let count = 0
        let itensDre = ["descricao", "departamento", "valor_dre", "rateio_dre", "valor_dre", "grupo", "subgrupo", "vinculado_dre", "categoria"]
        let itensContaRemover = { vencimento_parcela: true, valor_parcela: true, numero_parcela: true, id: true, numero_conta: true }
        let objContaCount = {}
        for (let div of divs) {
            let id = div.getElementsByTagName('span')[0].innerText
            let nome = div.getElementsByTagName('span')[1].innerText
            let idNome = id + " " + nome
            if (tipoDados == "contas") {
                let vinculado = div.querySelector("span[name='vinculado-list']").innerText
                let numeroConta = div.querySelector("span[name='numero_conta-list']").innerText
                if (typeof objContaCount[numeroConta] == 'undefined') {
                    objContaCount[numeroConta] = 2
                }
                if (typeof objConta[numeroConta] == 'undefined') {
                    objConta[numeroConta] = {}
                    for (let element of div.getElementsByTagName('span')) {
                        if (typeof itensContaRemover[element.getAttribute('name').replace('-list', '')] == 'undefined') {
                            objConta[numeroConta][element.getAttribute('name').replace('-list', '')] = element.innerText
                        }
                    }
                } else {
                    for (let element of div.getElementsByTagName('span')) {
                        if (itensDre.includes(element.getAttribute('name').replace('-list', ''))) {
                            if (element.getAttribute('name') == 'valor_dre') {
                                objContaCount[numeroConta] += 1
                            }
                            objConta[numeroConta][element.getAttribute('name').replace('-list', ('_' + objContaCount[numeroConta]))] = element.innerText
                        }
                    }
                }

                if (vinculo) {
                    if (vinculado.toLowerCase().indexOf(filtro.toLowerCase()) != -1 && filtro != "" && filtro.length > 0 && !buscaPorCodigo) {
                        divFinal += `<span class='cursor-pointer w-100 ps-2' id="${e.name}" onclick="selectOpt('${tipoDados}', '${numeroConta}', '${e.name}')">` + vinculado.replace(new RegExp(filtro, 'gi'), function (match) {
                            return "<strong>" + match + "</strong>"
                        }) + '</span>'
                        count++
                    }
                } else {

                }
            }
            else if (tipoDados == "dres") {
                let descricao = div.getElementsByTagName('span')[0].innerText
                let departamento = div.getElementsByTagName('span')[1].innerText
                let rateio = div.getElementsByTagName('span')[2].innerText
                let vinculado = div.getElementsByTagName('span')[3].innerText
                let valor_dre = div.getElementsByTagName('span')[4].innerText
                let categoria = div.getElementsByTagName('span')[5].innerText
                let grupo = div.getElementsByTagName('span')[6].innerText
                let subgrupo = div.getElementsByTagName('span')[7].innerText
                complemento = complemento || ""
                if (vinculo) {
                    if (vinculado.toLowerCase().indexOf(filtro.toLowerCase()) != -1 && filtro != "" && filtro.length > 0 && !buscaPorCodigo) {
                        divFinal += `<span class='cursor-pointer w-100 ps-2' id="${e.name}" onclick="selectOpt('${tipoDados}', '${vinculado}', '${e.name}', '${descricao}', '${departamento}', '${rateio}', '${categoria}', '${grupo}', '${subgrupo}', '${valor_dre}', '${complemento}', ${vinculo})">` + vinculado.replace(new RegExp(filtro, 'gi'), function (match) {
                            return "<strong>" + match + "</strong>"
                        }) + '</span>'
                        count++
                    }
                } else {
                    if (rateio.toLowerCase().indexOf(filtro.toLowerCase()) != -1 && filtro != "" && filtro.length > 0 && !buscaPorCodigo) {
                        divFinal += `<span class='cursor-pointer w-100 ps-2' id="${e.name}" onclick="selectOpt('${tipoDados}', '${rateio}', '${e.name}', '${descricao}', '${departamento}', '${vinculado}', '${categoria}', '${grupo}', '${subgrupo}', '${valor_dre}', '${complemento}', ${vinculo})">` + rateio.replace(new RegExp(filtro, 'gi'), function (match) {
                            return "<strong>" + match + "</strong>"
                        }) + '</span>'
                        count++
                    }
                }

            }
            else if (tipoDados == "fornecedores") {
                let name1 = div.getElementsByTagName('span')[2].dataset.name
                let text1 = div.getElementsByTagName('span')[2].innerText
                let chave = div.getElementsByTagName('span')[3].innerText
                let nomeChavePix = `${nome} [ Pix: ${chave} ]`
                if (nome.toLowerCase().indexOf(filtro.toLowerCase()) != -1 && filtro != "" && filtro.length > 0 && !buscaPorCodigo) {
                    divFinal += `<span class='cursor-pointer w-100 ps-2' id="${nome}" onclick="selectOpt('${tipoDados}', '${nome}', '${e.name}', '${name1}', '${text1}' )">` + nomeChavePix.replace(new RegExp(filtro, 'gi'), function (match) {
                        return "<strong>" + match + "</strong>"
                    }) + '</span>'
                    count++
                }
            } else if (tipoDados == "categorias" || tipoDados == "bancos") {
                let name1 = div.getElementsByTagName('span')[2].dataset.name
                let text1 = div.getElementsByTagName('span')[2].innerText
                let name2 = div.getElementsByTagName('span')[3].dataset.name
                let text2 = div.getElementsByTagName('span')[3].innerText
                let nomeFull = `${nome} [ ag: ${text1} cc: ${text2} ]`
                nomeFull = tipoDados == "bancos" ? nomeFull : nome
                if (nome.toLowerCase().indexOf(filtro.toLowerCase()) != -1 && filtro != "" && filtro.length > 0 && !buscaPorCodigo) {
                    divFinal += `<span class='cursor-pointer w-100 ps-2' id="${nome}" onclick="selectOpt('${tipoDados}', '${nome}', '${e.name}', '${name1}', '${text1}', '${name2}', '${text2}' )">` + nomeFull.replace(new RegExp(filtro, 'gi'), function (match) {
                        return "<strong>" + match + "</strong>"
                    }) + '</span>'
                    count++
                }
            } else if (nome.toLowerCase().indexOf(filtro.toLowerCase()) != -1 && filtro != "" && filtro.length > 0 && !buscaPorCodigo) {
                if (document.getElementsByName('num_' + e.name).length > 0) {
                    divFinal += `<span class='cursor-pointer w-100 ps-2' data-opt="1" data-id="${id}" id="${nome}" onclick="select('${e.name}', '${nome}', '${id}', 'num_')">` + nome.replace(new RegExp(filtro, 'gi'), function (match) {
                        return "<strong>" + match + "</strong>"
                    }) + '</span>'
                } else if (document.getElementsByName('cod_' + e.name).length > 0) {
                    divFinal += `<span class='cursor-pointer w-100 ps-2' data-opt="1" data-id="${id}" id="${nome}" onclick="select('${e.name}', '${nome}', '${id}', 'doc_')">` + nome.replace(new RegExp(filtro, 'gi'), function (match) {
                        return "<strong>" + match + "</strong>"
                    }) + '</span>'
                } else {
                    divFinal += `<span class='cursor-pointer w-100 ps-2' data-opt="1" data-id="${id}" id="${nome}" onclick="select('${e.name}', '${nome}')">` + nome.replace(new RegExp(filtro, 'gi'), function (match) {
                        return "<strong>" + match + "</strong>"
                    }) + '</span>'
                }
                count++
            } else if (id.toLowerCase().indexOf(filtro.toLowerCase()) != -1 && filtro != "" && !isNaN(e.value)) {
                divFinal += `<span class='cursor-pointer w-100 ps-2' data-opt="0" data-id="${id}" id="${nome}" onclick="select('${e.name}', '${nome}', '${id}')">` + idNome.replace(new RegExp(filtro, 'gi'), function (match) {
                    return "<strong>" + match + "</strong>"
                }) + '</span>'
                count++
            }
        }
        divFinal += "</div>"
        if (count > 0) {
            document.querySelector('#popupFiltro-' + e.name).innerHTML = divFinal
        } else if (tipoDados == "fornecedores") {
            document.querySelector('#popupFiltro-' + e.name).innerHTML = `
                <strong class="bg-secondary p-1">Sem correspondência!</strong>
                <br>
                <a onclick="popupCadastraFornecedor()" class="btn btn-success btn-sm mt-2">Cadastrar Fornecedor</a>
            `
        } else {
            document.querySelector('#popupFiltro-' + e.name).innerHTML = `<strong class="bg-secondary p-1">Sem correspondência!</strong>`
        }
        document.querySelector('#popupFiltro-' + e.name).style.width = width
        document.querySelector('#popupFiltro-' + e.name).classList.remove("d-none")
        document.querySelector('#popupFiltro-' + e.name).classList.add("d-block")
        return true
    }
    function selectOpt(tipoDados, nome, name, name1, text1, name2, text2, text3, text4, text5, complemento, vinculo) {
        if (tipoDados == "contas") {
            let qtdeDre = Object.entries(objConta[nome]).filter(function (item) {
                if (item[0].includes("categoria")) { return item }
            })
            for (x of qtdeDre.slice(1)) { document.querySelector('#btn-add-dre').click() }
            for (let item of Object.entries(objConta[nome])) { // neste caso "nome" está vindo como id do objeto global, pois não passar o objeto pelo arg da função
                document.getElementsByName(item[0])[0].value = item[1]
            }
        } else if (tipoDados == 'categorias' || tipoDados == 'bancos') {
            document.getElementsByName(name)[0].value = nome
            document.getElementsByName(name1)[0].value = text1
            document.getElementsByName(name2)[0].value = text2
        } else if (tipoDados == "fornecedores") {
            document.getElementsByName(name)[0].value = nome
            document.getElementsByName(name1)[0].value = text1
        }
        else if (tipoDados == "dres" || tipoDados == "vinculado_dre") {
            if (!vinculo) {
                document.getElementsByName(name)[0].value = nome
                document.getElementsByName("vinculado_dre" + complemento)[0].value = name2
            } else {
                document.getElementsByName(name)[0].value = nome
                document.getElementsByName("rateio_dre" + complemento)[0].value = name2
            }
            document.getElementsByName("descricao" + complemento)[0].value = name1
            document.getElementsByName("departamento" + complemento)[0].value = text1
            document.getElementsByName("categoria" + complemento)[0].value = text2
            document.getElementsByName("grupo" + complemento)[0].value = text3
            document.getElementsByName("subgrupo" + complemento)[0].value = text4
            document.getElementsByName("valor_dre" + complemento)[0].value = text5
        }
        document.querySelector('#popupFiltro-' + name).innerText = ""
        document.querySelector('#popupFiltro-' + name).classList.add("d-none")
    }
    function select(name, value, codigo, prefixoName) {
        if (prefixoName) {
            document.getElementsByName(prefixoName + name)[0].value = codigo
            document.getElementsByName(name)[0].value = value
        } else if (codigo) {
            document.getElementsByName(name)[0].value = codigo
            document.getElementsByName(name.replace('cod_', ''))[0].value = value
        } else {
            document.getElementsByName(name)[0].value = value
        }
        document.querySelector('#popupFiltro-' + name).innerText = ""
        document.querySelector('#popupFiltro-' + name).classList.add("d-none")
    }

    function closePopupFiltro(e) {
        try {
            setTimeout(function () {
                document.querySelector('#popupFiltro-' + e.target.name).innerHTML = "" // aqui configura quando apertar o enter fora do input se vai pegar o selecionado do popup ou se quer apagar tudo e não pegar nada 
                document.querySelector('#popupFiltro-' + e.target.name).classList.add("d-none")
            }, 500)
        } catch (e) { }
    }
    window.addEventListener('focusout', closePopupFiltro)
    window.addEventListener("keyup", function (event) {
        event.preventDefault();
        try {
            if (event.isComposing || event.keyCode === 229) {
                return;
            }
            if (event.keyCode == 38 && cursorPopupFiltro > 0) {
                document.querySelector(idPopupFitro).getElementsByTagName('span')[cursorPopupFiltro].style.backgroundColor = "white"
                cursorPopupFiltro--
            }

            if (event.keyCode == 40 && cursorPopupFiltro < document.querySelector(idPopupFitro).getElementsByTagName('span').length - 1) {
                document.querySelector(idPopupFitro).getElementsByTagName('span')[cursorPopupFiltro].style.backgroundColor = "white"
                cursorPopupFiltro++
            }
            document.querySelector(idPopupFitro).getElementsByTagName('span')[cursorPopupFiltro].style.backgroundColor = "#e9e9e9"

            if (event.keyCode == 13) {
                try {
                    if (document.getElementsByName(idPopupFitro.replace('#popupFiltro-', ''))[0].name.indexOf('cod_') != -1) {
                        document.getElementsByName(idPopupFitro.replace('#popupFiltro-', ''))[0].value = document.querySelector(idPopupFitro).getElementsByTagName('span')[cursorPopupFiltro].dataset.id
                        document.getElementsByName(idPopupFitro.replace('#popupFiltro-', '').replace('cod_', ''))[0].value = document.querySelector(idPopupFitro).getElementsByTagName('span')[cursorPopupFiltro].id
                    } else if (document.querySelector(idPopupFitro).getElementsByTagName('span')[cursorPopupFiltro].dataset.opt == 1) {
                        document.getElementsByName(idPopupFitro.replace('#popupFiltro-', ''))[0].value = document.querySelector(idPopupFitro).getElementsByTagName('span')[cursorPopupFiltro].id
                        document.getElementsByName("cod_" + idPopupFitro.replace('#popupFiltro-', ''))[0].value = document.querySelector(idPopupFitro).getElementsByTagName('span')[cursorPopupFiltro].dataset.id
                    } else {
                        document.getElementsByName(idPopupFitro.replace('#popupFiltro-', ''))[0].value = document.querySelector(idPopupFitro).getElementsByTagName('span')[cursorPopupFiltro].innerText
                    }
                    cursorPopupFiltro = 0
                } catch (e) { cursorPopupFiltro = 0 }
            }
        } catch (e) { }
    });
    document.querySelector('.menu-sidebar').addEventListener('scroll', function (e) { // 133-2 189-3 234-4 285-5
        /** for ( let li of e.target.getElementsByTagName('ul')[0].getElementsByTagName('li') ) {
             if ( li.getBoundingClientRect().top <= 26 ) {
                 li.style.opacity = "0"
             }else {
                 li.style.opacity = "1"
                 for ( let a of li.getElementsByTagName('a') ) { 
                     //console.log(a)
                     a.innerText.trim()
                     a.classList.add('d-sm-inline') 
                 }
             }
         }*/
    })
    /* detectar quando usuário sai da página */
    //document.onvisibilitychange = function() {
    //    if (document.visibilityState === 'hidden') {
    //        //navigator.sendBeacon('/log', analyticsData);
    //        let r = window.location.href
    //        console.log(r)
    //    }
    //}

    document.querySelector("#btn-abrir-conta").addEventListener('click', function(e) {
        let numeroConta = document.querySelector("#numero-conta-abrir-conta").value
        let situacao = document.querySelector("#situacao-abrir-conta").value
        e.target.href = `/conta/abrir-conta?numero_conta=${numeroConta}&situacao=${situacao}`
        document.querySelector("#btn-close-popup-abrir-conta").click()
    })
    function validarCaracter(e) {
        timeDigitValor = new Date()
        e.value = e.value.trim()
        let numeros = { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true, 7: true, 8: true, 9: true, "Backspace": true}
        if ( typeof numeros[event.key] != 'undefined' ) { return true }
        if (event.key == "Enter" || event.key == 'Tab' ) { return true }
        if (event.key == "Backspace") {
            e.value = e.value.replaceAll(".", "")
            return true
        }
        let regex = /[^\w\s,]/gi
        if (regex.test(e.value.replace("R$ ", ""))) return sendInfo("Warning", "Não é permitido usar caracter especial.")
        let regex2 = /[^0-9,]/gi
        if (regex2.test(e.value.replace("R$ ", ""))) return sendInfo("Warning", "Não é permitido usar letra.")
    }
    function formataValorInput(e, automatico=false) {
        e.value = e.value.trim()
        e.value = e.value.replaceAll(".", "").replace("R$ ", "")
        if (e.value == "") return true
        if (e.value.includes(',') && !e.value.slice(-2).includes(',') && e.value.includes(',') && !e.value.slice(-3).includes(',')) {
            return sendInfo("Warning", 'A vírgula só pode ser usada nas casas decimais. Ex [1000,50] ou [1000,5]')
        }

        if (e.value.includes(',')) {
            var eVal = parseFloat(e.value.split(',')[0])
            var eDecimal = "," + e.value.split(',')[1].toString().padEnd(2, '0')
        } else {
            var eVal = parseFloat(e.value)
            var eDecimal = ",00"
        }
        let value = formatarValor(eVal)
        e.value = "R$ " + value.toString() + eDecimal

        compareValor() // está comparando o valor entre o total da conta e dos dres, ele estava no onchenge dos campos de valores 
    }
    function formatarValor(valor, depoisVirgula = false) {
        if (depoisVirgula) var minimumFractionDigits = 2
        else var minimumFractionDigits = 0
        return valor.toLocaleString('pt-BR', { minimumFractionDigits });
    }
    function sendInfo(tipo, texto) {
        tituloModalInfo.innerText = tipo
        if ( tipo == "Warning" ) {
            tituloModalInfo.classList.remove('bg-success')
            tituloModalInfo.classList.add('bg-warning')
            tituloModalInfo.classList.remove('text-white')
            tituloModalInfo.classList.add('text-dark')
            btnCloseModalInfo.classList.remove('btn-success')
            btnCloseModalInfo.classList.add('btn-warning')
        }
        if ( tipo == 'Informação' ) {
            tituloModalInfo.classList.remove('bg-warning')
            tituloModalInfo.classList.add('bg-success')
            tituloModalInfo.classList.remove('text-dark')
            tituloModalInfo.classList.add('text-white')
            btnCloseModalInfo.classList.remove('btn-warning')
            btnCloseModalInfo.classList.add('btn-success')
        }
        bodyModalInfo.innerText = texto
        btnModalInfo.click()
    }
</script>


</html>